server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # Gzip to reduce bandwidth
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 512;

  # Max upload size
  client_max_body_size 10M;

  # Serve static assets directly and set long cache for fingerprinted assets
  location /assets/ {
    try_files $uri $uri/ =404;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
  }

  # If your build places static hashed assets under /_assets or /static, add them too:
  location ~* \/(?:_assets|static)\/ {
    try_files $uri $uri/ =404;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
  }

  # API proxy (preserve /api prefix)
  location /api/ {
    proxy_pass http://backend-svc:4000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket support (if your backend uses sockets)
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # SPA fallback for client-side routing and OAuth callbacks
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Health check endpoint (optional)
  location /healthz {
    return 200 'ok';
    add_header Content-Type text/plain;
  }

  # Reduce log noise / level
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log warn;
}

# connection upgrade helper for websockets
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}